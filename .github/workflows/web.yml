name: web

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Name of the Docker image'
        required: true
        type: string
      node_version:
        description: 'Version of Node.js to use'
        required: false
        type: string
        default: '20'
      pnpm_version:
        description: 'Version of pnpm to use'
        required: false
        type: string
        default: '10'
    secrets:
      ws_url:
        required: true

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: ${{ inputs.pnpm_version }}
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: web/pnpm-lock.yaml
          node-version: ${{ inputs.node_version }}
          cache: 'pnpm'

      - name: Install dependencies
        working-directory: web
        run: pnpm install

      - name: Build Svelte app
        working-directory: web
        run: pnpm run build
        env:
          VITE_WS_URL: ${{ secrets.ws_url }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/web/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/v3lmx/${{ inputs.image_name }}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/v3lmx/${{ inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

