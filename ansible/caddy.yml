---
- name: Build Caddy locally
  hosts: localhost
  become: no
  tags: build
  vars:
    xcaddy_version: 0.4.4
    xcaddy_url: "https://github.com/caddyserver/xcaddy/releases/download/v{{ xcaddy_version }}/xcaddy_{{ xcaddy_version }}_linux_amd64.tar.gz"
    xcaddy_path: /tmp/xcaddy
    caddy_path: /tmp/caddy

  tasks:
    - name: Download xcaddy
      get_url:
        url: "{{ xcaddy_url }}"
        dest: /tmp/xcaddy.tar.gz

    - name: Extract xcaddy
      unarchive:
        src: /tmp/xcaddy.tar.gz
        dest: /tmp
        remote_src: yes

    - name: Make xcaddy executable
      file:
        path: "{{ xcaddy_path }}"
        mode: '0755'

    - name: Build Caddy with Cloudflare DNS extension
      command: "xcaddy build --output {{ caddy_path }} --with github.com/caddy-dns/cloudflare"


- name: Deploy Caddy using Docker
  hosts: all
  become: yes
  vars:
    exec_path: /usr/local/bin
    caddy_image: "caddy:2.10-alpine"
    caddy_container_name: caddy_server
    local_caddyfile_path: ./files/Caddyfile
    caddyfile_path: /etc/caddy/Caddyfile
    caddy_sites_staging_path: /etc/caddy/sites/staging
    caddy_sites_prod_path: /etc/caddy/sites/prod
    caddy_data_path: /etc/caddy/data
    caddy_config_path: /etc/caddy/config

  tasks:
    - name: Copy Caddy executable to remote server
      copy:
        src: "/tmp/caddy"
        dest: "{{ exec_path }}/caddy"
        mode: '0755'
        force: true

    - name: Create Caddy directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ caddy_data_path }}"
        - "{{ caddy_config_path }}"
        - "{{ caddy_sites_staging_path }}"
        - "{{ caddy_sites_prod_path }}"

    - name: Upload Caddyfile
      copy:
        src: "{{ local_caddyfile_path }}"
        dest: "{{ caddyfile_path }}"
        force: true

    - name: Upload cloudflare token
      copy:
        src: "./secrets/cloudflare.Caddyfile"
        dest: "/etc/caddy/cloudflare.Caddyfile"
        force: true

    - name: Pull Caddy Docker image
      docker_image:
        name: "{{ caddy_image }}"
        source: pull

    - name: Run Caddy Docker container
      docker_container:
        name: "{{ caddy_container_name }}"
        image: "{{ caddy_image }}"
        state: started
        ports:
          - "80:80"
          - "443:443"
          - "443:443/udp"
        volumes:
          - "{{ caddyfile_path }}:/etc/caddy/Caddyfile"
          - "/etc/caddy:/etc/caddy"
          - "{{ caddy_data_path }}:/data"
          - "{{ caddy_config_path }}:/config"
          - "{{ exec_path }}/caddy:/usr/bin/caddy"
        restart_policy: always

    - name: Reload Caddy configuration
      community.docker.docker_container_exec:
        container: "{{ caddy_container_name }}"
        command: caddy reload --config /etc/caddy/Caddyfile --adapter caddyfile
